<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.mycompany</groupId>
    <artifactId>InventarioPlus</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>InventarioPlus-1.0-SNAPSHOT</name>
    
    <!-- 
        Propiedades del proyecto - variables reutilizables en todo el POM 
    -->
    <properties>
        <!-- Codificación de caracteres para todos los archivos fuente -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <!-- Versión de Jakarta EE - define la versión del estándar empresarial -->
        <jakartaee>10.0.0</jakartaee>
    </properties>
    
    <!-- 
        Dependencias del proyecto - librerías externas requeridas
    -->
    <dependencies>
        <!-- 
            Jakarta EE API - Especificaciones del estándar empresarial
            Scope 'provided' = el servidor de aplicaciones ya incluye estas APIs
            No se empaqueta en el WAR final
        -->
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>${jakartaee}</version>
            <scope>provided</scope>
        </dependency>
        
        <!-- 
            JSTL API - Definición de interfaces para JSP Standard Tag Library
            Contiene las definiciones de etiquetas como <c:if>, <c:forEach>
        -->
        <dependency>
            <groupId>jakarta.servlet.jsp.jstl</groupId>
            <artifactId>jakarta.servlet.jsp.jstl-api</artifactId>
            <version>3.0.0</version>
        </dependency>
        
        <!-- 
            JSTL Implementation - Implementación concreta de las etiquetas JSTL
            Glassfish proporciona la implementación real de las etiquetas
        -->
        <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>jakarta.servlet.jsp.jstl</artifactId>
            <version>3.0.1</version>
        </dependency>
        
        <!-- 
            Jakarta Expression Language - Motor de evaluación de expresiones
            Permite usar expresiones como ${variable} en JSPs
        -->
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>jakarta.el</artifactId>
            <version>4.0.2</version>
        </dependency>
        
        <!-- 
            MySQL Connector - Driver JDBC para conectar con base de datos MySQL
            Versión actualizada del conector oficial de MySQL
        -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <version>8.0.33</version>
        </dependency>
        
        <!-- 
            Servlet API - API de Servlets
            Scope 'provided' = el servidor de aplicaciones ya incluye esta API
            No se empaqueta en el WAR final
        -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.1</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    
    <!-- 
        Configuración de construcción del proyecto
    -->
    <build>
        <!-- 
            Plugins de Maven - herramientas que ejecutan tareas específicas
        -->
        <plugins>
            <!-- 
                Maven Compiler Plugin - Compila el código fuente Java
                Configura la versión de Java para compilación
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <!-- Versión de Java para el código fuente -->
                    <source>17</source>
                    <!-- Versión de Java para los archivos compilados -->
                    <target>17</target>
                </configuration>
            </plugin>
            
            <!-- 
                Maven WAR Plugin - Empaqueta la aplicación como archivo WAR
                Configura cómo se genera el archivo WAR para deployment
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.4.0</version>
            </plugin>
        </plugins>
    </build>
</project>
